schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    """
    Создание пользователя. Может вернуть ошибки: ALREADY_EXIST, VALIDATION
    """
    registerUser(input: RegisterUserInput!): RegisterUserOutput!

    # Обновление пароля. Может вернуть ошибки: VALIDATION

    # updateUserCredentials(input: UpdateUserCredentialsInput!): UpdateUserCredentialsOutput!

    # Подтверждение пользователя. Может вернуть ошибки: VALIDATION

    # confirmUser(input: ConfirmUserInput!): ConfirmUserOutput!

    """
    Обновление пользователя. Может вернуть ошибки: VALIDATION, NOT_FOUND_ERROR
    """
    updateUser(input: UpdateUserInput!): UpdateUserOutput!

    """
    Обновление пароля. Может вернуть ошибки: VALIDATION, NOT_FOUND_ERROR, , INVALID_CREDENTIALS
    """
    updatePassword(input: UpdatePasswordInput!): UpdatePasswordOutput!

    """
    Обновление почты. Может вернуть ошибки: VALIDATION, NOT_FOUND_ERROR, , INVALID_CREDENTIALS
    """
    updateEmail(input: UpdateEmailInput!): UpdateEmailOutput!

    # Удаление пользователя. Может вернуть ошибки: VALIDATION_ERROR, NOT_FOUND

    # deleteUser(input: DeleteUserInput!): DeleteUserOutput!

    """
    Восстановление пароля - генерация и отправка кода восстановления. Может вернуть ошибки: VALIDATION, NOT_FOUND
    """
    recoveryPassword(input: RecoveryPasswordInput!): RecoveryPasswordOutput!

    """
    Восстановление пароля - проверка кода восстановления и сброс пароля. Может вернуть ошибки: VALIDATION, NOT_FOUND
    """

    resetPassword(input: ResetPasswordInput!): ResetPasswordOutput!
}

type Query {
    """
    Аутентификация пользователя. Может вернуть ошибки: VALIDATION, NOT_FOUND, INVALID_CREDENTIALS
    """
    authenticateUser(input: AuthenticateUserInput!): AuthenticateUserOutput!

    """
    Получение пользователя. Может вернуть ошибки: NOT_FOUND, VALIDATION
    """
    getUser(input: GetUserInput!): GetUserOutput!

    """
    Получение статистики пользователя по играм и метатемам. Может вернуть ошибки: NOT_FOUND
    """
    getGamesStats(input: GetGamesStatsInput!): GetGamesStatsOutput!

    """
    Получение ачивок пользователя.
    """
    getUserAchievements(userId: Int!, limit: Int!, offset: Int!): [Achievement!]!
    
    """
    Восстановление пароля - проверка кода восстановления. Может вернуть ошибки: VALIDATION, NOT_FOUND
    """
    verifyRecoveryCode(input: VerifyRecoveryCodeInput!): VerifyRecoveryCodeOutput!
}
